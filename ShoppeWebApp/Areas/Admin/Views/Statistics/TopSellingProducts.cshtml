@model ShoppeWebApp.ViewModels.Admin.TopSellingProductsViewModel
@using System.Globalization
@{
    Layout = "~/Areas/Admin/Shared/_Layout.cshtml"; 
} 
<div class="container mt-4">
    <div class="p-5 border border-success rounded" style="background-color: #fdfdfd; min-height: 80vh;">
        <div class="text-center mb-4">
            <h2 class="fw-bold text-white p-3" style="background-color: #28a745; border-radius: 10px;">
                Sản phẩm bán chạy
            </h2>
        </div>

        <!-- Form lọc -->
        <form method="get" class="row g-3 mb-4">
            <div class="col-md-4">
                <label for="StartDate" class="form-label">Ngày bắt đầu</label>
                <input type="date" id="StartDate" name="startDate" class="form-control" value="@Model.StartDate?.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-4">
                <label for="EndDate" class="form-label">Ngày kết thúc</label>
                <input type="date" id="EndDate" name="endDate" class="form-control" value="@Model.EndDate?.ToString("yyyy-MM-dd")" />
            </div>
            <div class="col-md-4">
                <label for="SelectedCategory" class="form-label">Danh mục</label>
                    <select id="SelectedCategory" name="selectedCategory" class="form-select">
                        <option value="">Tất cả</option>
                        @foreach (var category in Model.AvailableCategories ?? Enumerable.Empty<string>())
                        {
                            if (Model.SelectedCategory == category)
                            {
                                <option value="@category" selected>@category</option>
                            }
                            else
                            {
                                <option value="@category">@category</option>
                            }
                        }
                    </select>
                </div>
            <div class="col-md-12 text-end">
                <button type="submit" class="btn btn-success">Lọc</button>
            </div>
        </form>
         
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger mt-3">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <div>@error.ErrorMessage</div>
                }
            </div>
        }

        <!-- Hiển thị danh sách sản phẩm bán chạy -->
        <div class="mt-4">
            <h3 class="mt-4 text-center">Top 10 Sản Phẩm Bán Chạy</h3>
            @if (Model.TopSellingProducts != null && Model.TopSellingProducts.Any())
            {
                <table class="table table-bordered table-hover">
                    <thead class="table-success text-center">
                        <tr>
                            <th>STT</th>
                            <th>Hình ảnh</th>
                            <th>Mã sản phẩm</th>
                            <th style="width: 25%;">Tên sản phẩm</th>
                            <th>Số lượng bán</th>
                            <th>Số lượng đơn</th>
                            <th>Tiền hàng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.TopSellingProducts.Count; i++)
                        {
                            var product = Model.TopSellingProducts[i];
                            <tr>
                                <td class="text-center">@(i + 1)</td>
                                <td class="text-center">
                                    <img src="@Url.Content(product.ImageUrl?.StartsWith("/") == true ? product.ImageUrl : $"/{product.ImageUrl}")" 
                                         alt="@product.ProductName" 
                                         style="width: 100px; height: 100px; object-fit: cover; border-radius: 5px;" />
                                </td>
                                <td class="text-center">@product.ProductId</td>
                                <td>@product.ProductName</td>
                                <td class="text-center">@product.QuantitySold</td>
                                <td class="text-center">@product.OrderCount</td>
                                <td class="text-end">@product.TotalRevenue.ToString("c0", CultureInfo.GetCultureInfo("vi-VN"))</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-center text-muted">Không có sản phẩm nào trong khoảng thời gian này.</p>
            }
        </div>

        <!-- Hiển thị doanh thu theo danh mục -->
        <div class="mt-5">
            <h3 class="text-center">Doanh Thu Theo Danh Mục</h3>
            @if (Model.CategoryRevenues != null && Model.CategoryRevenues.Any())
            {
                <div class="row mt-4">
                    <!-- Biểu đồ -->
                    <div class="col-md-6 d-flex justify-content-center">
                        <div class="p-3 border rounded shadow-sm">
                            <canvas id="categoryRevenueChart" width="500" height="500"></canvas> <!-- Làm biểu đồ nhỏ hơn -->
                        </div>
                    </div>
        
                    <!-- Bảng thống kê doanh thu -->
                    <div class="col-md-6">
                        <div class="p-3 border rounded shadow-sm">
                            <h5 class="text-center">Bảng Thống Kê Doanh Thu</h5>
                            <table class="table table-bordered mt-3">
                                <thead class="table-success">
                                    <tr>
                                        <th>Danh mục</th>
                                        <th>Doanh thu</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var category in Model.CategoryRevenues)
                                    {
                                        <tr>
                                            <td>@category.CategoryName</td>
                                            <td>@category.Revenue.ToString("c0", CultureInfo.GetCultureInfo("vi-VN"))</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                    
                            <!-- Danh mục có doanh thu cao nhất -->
                            <div class="mt-4 p-3 border rounded bg-light shadow-sm">
                                <h5 class="text-center text-primary">Danh mục có doanh thu cao nhất</h5>
                                <p class="text-center mb-1">
                                    <strong class="text-success">@Model.TopCategoryName</strong>
                                </p>
                                <p class="text-center">
                                    <span class="text-muted">Doanh thu:</span> <strong class="text-success">@Model.TopCategoryRevenue.ToString("c0", CultureInfo.GetCultureInfo("vi-VN"))</strong>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
        
                <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script> <!-- Plugin để hiển thị nhãn -->
                <script>
                    document.addEventListener("DOMContentLoaded", function () {
                        var ctx = document.getElementById('categoryRevenueChart').getContext('2d');
                        var categoryRevenueChart = new Chart(ctx, {
                            type: 'pie',
                            data: {
                                labels: @Html.Raw(Json.Serialize(Model.CategoryRevenues.Select(c => c.CategoryName))),
                                datasets: [{
                                    label: 'Doanh Thu',
                                    data: @Html.Raw(Json.Serialize(Model.CategoryRevenues.Select(c => c.Revenue))),
                                    backgroundColor: [
                                        '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'
                                    ],
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                plugins: {
                                    legend: {
                                        position: 'top', // Chuyển chú thích lên trên
                                    },
                                    title: {
                                        display: true,
                                        text: 'Biểu Đồ Doanh Thu Theo Danh Mục', // Tiêu đề biểu đồ
                                        font: {
                                            size: 16,
                                            weight: 'bold'
                                        }
                                    },
                                    tooltip: {
                                        callbacks: {
                                            label: function (context) {
                                                let value = context.raw || 0;
                                                let total = context.dataset.data.reduce((a, b) => a + b, 0);
                                                let percentage = ((value / total) * 100).toFixed(2);
                                                return `${context.label}: ${value.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })} (${percentage}%)`;
                                            }
                                        }
                                    },
                                    datalabels: {
                                        color: '#fff', // Màu chữ
                                        font: {
                                            weight: 'bold',
                                            size: 12
                                        },
                                        formatter: function (value, context) {
                                            let total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);
                                            let percentage = ((value / total) * 100).toFixed(2);
                                            return `${percentage}%`; // Hiển thị phần trăm
                                        }
                                    }
                                }
                            },
                            plugins: [ChartDataLabels] // Kích hoạt plugin hiển thị nhãn
                        });
                    });
                </script>
            }
            else
            {
                <p class="text-center text-muted">Không có dữ liệu doanh thu theo danh mục.</p>
            }
        </div>
    </div>
</div>