@model ShoppingCartViewModel
@{
	ViewData["Title"] = "Giỏ hàng";
}
<div class="template-2">
	<div class="container-2 d-flex flex-column gap-4">
		<div class="bg-white box-padding-15 border-rounded box-padding-left-30">
			<div class="d-flex box-padding-left-right-10 gap-3 text-highlight">
				<div class="width-2 d-flex justify-content-center align-items-center">
					<label class="custom-checkbox-container">
						<input type="checkbox" class="allCheck" />
						<span class="checkmark"></span>
					</label>
				</div>
				<div class="width-50">
					Sản phẩm
				</div>
				<div class="width-12 text-center">
					Đơn giá
				</div>
				<div class="width-12 text-center">
					Số lượng
				</div>
				<div class="width-12 text-center">
					Số tiền
				</div>
				<div class="width-12 text-center">
					Thao tác
				</div>
			</div>
		</div>
		<div class="bg-white box-padding-15 border-rounded box-padding-left-30">
			@if (Model.danhSachCuaHang != null)
				foreach (var i in Model.danhSachCuaHang)
				{
					<div class="d-flex border-bottom-style-1 width-100 box-padding-10 gap-3">
						<div class="width-2 d-flex justify-content-center align-items-center">
							<label class="custom-checkbox-container">
								<input type="checkbox" class="shopCheck" data-group="@i.IdCuaHang" />
								<span class="checkmark"></span>
							</label>
						</div>
						<div>
							@i.TenCuaHang
						</div>
					</div>

					foreach (var j in i.danhSachSanPham)
					{
						<div class="d-flex box-padding-10 gap-3 border-bottom-style-1">
							<div class="width-2 d-flex justify-content-center align-items-center">
								<label class="custom-checkbox-container">
									<input type="checkbox" class="itemCheck" data-group="@i.IdCuaHang" name="@j.IdSanPham" />
									<span class="checkmark"></span>
								</label>
							</div>
							<div class="width-50 d-flex gap-3">
								<div class="IdSanPham" name="@j.IdSanPham" style="display:none">@j.IdSanPham</div>
								<div class="width-height-80px graphic-cover-2">
									<img src="/@j.UrlAnh" />
								</div>
								<div>
									@j.TenSanPham
								</div>
							</div>
							<div class="width-12 text-center">
								<div class="old-price">
									@string.Format("{0:#,##0} ₫", j.GiaGoc)
								</div>
								<div class="new-price" name="@j.IdSanPham">
									@string.Format("{0:#,##0} ₫", j.GiaBan)
								</div>
							</div>
							<div class="width-12 text-center">
								<div class="text-center d-inline-flex border-rounded border-style-3 overflow-hidden">
									<button class="counting-box decrease" name="@j.IdSanPham">-</button>
									<input type="text" class="counting-input quantity-input" name="@j.IdSanPham" value="@j.SoLuong">
									<button class="counting-box increase" name="@j.IdSanPham">+</button>
									<div class="SoLuongKho" name="@j.IdSanPham" style="display:none">@j.SoLuongKho</div>
								</div>
							</div>
							<div class="width-12 text-center total-price Product-Total-Price" name="@j.IdSanPham">
								@string.Format("{0:#,##0} ₫", j.GiaBan * j.SoLuong)
							</div>
							<div class="width-12">
								<div class="d-flex justify-content-center">
									<button class="invisible-button delete-product-shopcart-button">Xoá</button>
								</div>
							</div>
						</div>
					}
				}
		</div>
		<div class="bg-white box-padding-15 border-rounded box-padding-left-30">
			<div class="d-flex box-padding-left-right-10 gap-3 align-items-center">
				<div class="width-2 d-flex justify-content-center align-items-center">
					<label class="custom-checkbox-container">
						<input type="checkbox" class="allCheck" />
						<span class="checkmark"></span>
					</label>
				</div>
				<div>
					Chọn tất cả
				</div>
				<div>
					<button class="invisible-button  delete-product-shopcart-button">Xoá</button>
				</div>
				<div class="d-flex gap-3 ms-auto align-items-center">
					<div>
						Tổng cộng (<span id="FinalCount">0</span> sản phẩm): <span id="FinalPrice" class="text-highlight">0 ₫</span>
					</div>
					<div>
						<button class="invisible-button btn-buy">
							Mua hàng
						</button>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	const allCheckbox = document.getElementsByClassName('allCheck');
	const shopCheckbox = document.getElementsByClassName('shopCheck');
	const itemCheckbox = document.getElementsByClassName('itemCheck');
	function updateAllCheckbox() {
		let IsAllChecked = true;
		for(let i of itemCheckbox) {
			if(i.checked === false) IsAllChecked = false;
		}
		for(let i of allCheckbox) {
			i.checked = IsAllChecked;
		}
		updateFinalPrice();
		updateFinalCount();
	}
	function updateShopCheckbox(group) {
		let IsAllChecked = true;
		const shopCheckboxes = document.querySelectorAll(`[data-group="${group}"]`);
		let shop = document.querySelector(`[data-group="${group}"].shopCheck`);
		for(let i of shopCheckboxes) {
			if(i.className === 'itemCheck' && i.checked === false)
				IsAllChecked = false;
		}
		shop.checked = IsAllChecked;
		updateAllCheckbox();
	}

	for (let checkbox of allCheckbox) {
		checkbox.addEventListener('change', function() {
			const isChecked = this.checked;
			for(let i of allCheckbox) {
				i.checked = isChecked;
			}
			for(let i of shopCheckbox) {
				i.checked = isChecked;
			}
			for(let i of itemCheckbox) {
				i.checked = isChecked;
			}
			updateFinalPrice();
			updateFinalCount();
		});
	}
	for(let checkbox of shopCheckbox) {
		checkbox.addEventListener('change', function() {
			const isChecked = this.checked;
			const group = this.dataset.group;
			const shopCheckboxes = document.querySelectorAll(`[data-group="${group}"]`)
			for(let i of shopCheckboxes) {
				i.checked = isChecked;
			}
			updateAllCheckbox();
		});
	}
	for(let checkbox of itemCheckbox) {
		checkbox.addEventListener('change', function() {
			const group = this.dataset.group;
			updateShopCheckbox(group);
		});
	}

	const decreaseBtn = document.querySelectorAll('.decrease');
	const increaseBtn = document.querySelectorAll('.increase');
	const quantityInput = document.querySelectorAll('.quantity-input');

	function updateQuantityDb(IdSanPham, SoLuong) {
		$.ajax({
			url: '@Url.Action("UpdateQuantity", "ShoppingCart")',
			type: 'POST',
			data: { IdSanPham: IdSanPham, SoLuong: SoLuong },
			dataType: "json",
		})
	}

	function updateTotalPrice(name) {
		let total = document.querySelector(`[name="${name}"].Product-Total-Price`);
		let soLuong = parseInt(document.querySelector(`[name="${name}"].quantity-input`).value.replace(/[^0-9]/g, '')) || 0;
		let donGia = parseInt(document.querySelector(`[name="${name}"].new-price`).textContent.replace(/[^0-9]/g, '')) || 0;
		total.textContent = formatCurrency(soLuong * donGia);
	}

	function updateFinalPrice() {
		const checkedFinal = document.querySelectorAll(`.itemCheck`);
		let finalPrice = 0;
		for(let i of checkedFinal) {
			if(i.checked) {
				let name = i.name;
				let total = document.querySelector(`[name="${name}"].Product-Total-Price`);
				finalPrice += parseInt(total.textContent.replace(/[^0-9]/g, '')) || 0;
			}
		}
		let finalPriceObj = document.getElementById('FinalPrice');
		finalPriceObj.textContent = formatCurrency(finalPrice);
	}

	function updateFinalCount() {
		const checkedFinal = document.querySelectorAll(`.itemCheck`);
		let finalCount = 0;
		for(let i of checkedFinal) {
			if(i.checked) {
				let name = i.name;
				let total = document.querySelector(`[name="${name}"].quantity-input`);
				finalCount += parseInt(total.value.replace(/[^0-9]/g, '')) || 0;
			}
		}
		let finalCountObj = document.getElementById('FinalCount');
		finalCountObj.textContent = finalCount;
	}

	for (let btn of increaseBtn) {
		btn.addEventListener('click', function () {
			let name = this.name;
			let quantity = document.querySelector(`[name="${name}"].quantity-input`);
			let soLuong = parseInt(quantity.value) || 0;
			let soLuongKho = parseInt(document.querySelector(`[name="${name}"].SoLuongKho`).textContent) || 0;
			quantity.value = soLuong + 1;
			if (quantity.value < 1) {
				quantity.value = 1
			}
			if (quantity.value > soLuongKho) {
				quantity.value = soLuongKho
			}
			let id = document.querySelector(`[name="${name}"].IdSanPham`).textContent;
			updateQuantityDb(id, quantity.value);
			updateTotalPrice(name);
			updateFinalPrice();
			updateFinalCount();
		})
	}

	for (let btn of decreaseBtn) {
		btn.addEventListener('click', function () {
			let name = this.name;
			let quantity = document.querySelector(`[name="${name}"].quantity-input`);
			let soLuong = parseInt(quantity.value) || 0;
			let soLuongKho = parseInt(document.querySelector(`[name="${name}"].SoLuongKho`).textContent) || 0;
			quantity.value = soLuong - 1;
			if (quantity.value < 1) {
				quantity.value = 1
			}
			if (quantity.value > soLuongKho) {
				quantity.value = soLuongKho
			}
			let id = document.querySelector(`[name="${name}"].IdSanPham`).textContent;
			updateQuantityDb(id, quantity.value);
			updateTotalPrice(name);
			updateFinalPrice();
			updateFinalCount();
		})
	}

	for (let btn of quantityInput) {
		btn.addEventListener('input', function () {
			let name = this.name;
			let quantity = document.querySelector(`[name="${name}"].quantity-input`);
			quantity.value = quantity.value.replace(/[^0-9]/g, '');
			let soLuongKho = parseInt(document.querySelector(`[name="${name}"].SoLuongKho`).textContent) || 0;
			if (quantity.value < 1) {
				quantity.value = 1
			}
			if (quantity.value > soLuongKho) {
				quantity.value = soLuongKho
			}
			let id = document.querySelector(`[name="${name}"].IdSanPham`).textContent;
			updateQuantityDb(id, quantity.value);
			updateTotalPrice(name);
			updateFinalPrice();
			updateFinalCount();
		})
	}
</script>