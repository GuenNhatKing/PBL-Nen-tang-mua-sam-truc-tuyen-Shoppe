@model ShoppingCartViewModel
@{
	ViewData["Title"] = "Giỏ hàng";
}
<div class="template-2">
	<div class="container-2 d-flex flex-column gap-4">
		@if (Model.danhSachCuaHang != null && Model.danhSachCuaHang.Count > 0)
		{
			<div class="bg-white box-padding-15 border-rounded box-padding-left-30">
				<div class="d-flex box-padding-left-right-10 gap-3 text-highlight">
					<div class="width-2 d-flex justify-content-center align-items-center">
						<label class="custom-checkbox-container">
							<input type="checkbox" class="allCheck" />
							<span class="checkmark"></span>
						</label>
					</div>
					<div class="width-50">
						Sản phẩm
					</div>
					<div class="width-12 text-center">
						Đơn giá
					</div>
					<div class="width-12 text-center">
						Số lượng
					</div>
					<div class="width-12 text-center">
						Số tiền
					</div>
					<div class="width-12 text-center">
						Thao tác
					</div>
				</div>
			</div>
			foreach (var i in Model.danhSachCuaHang)
			{
				<div class="bg-white box-padding-15 border-rounded box-padding-left-30 shop-display" data-group="@i.IdCuaHang">
					<div class="d-flex border-bottom-style-1 width-100 box-padding-10 gap-3">
						<div class="width-2 d-flex justify-content-center align-items-center">
							<label class="custom-checkbox-container">
								<input type="checkbox" class="shopCheck" data-group="@i.IdCuaHang" />
								<span class="checkmark"></span>
							</label>
						</div>
						<div class="text-highlight">
							@i.TenCuaHang
						</div>
					</div>

					@foreach (var j in i.danhSachSanPham)
					{
						<div class="d-flex box-padding-10 gap-3 border-bottom-style-1 product-display" name="@j.IdSanPham" data-group="@i.IdCuaHang">
							<div class="width-2 d-flex justify-content-center align-items-center">
								<label class="custom-checkbox-container">
									<input type="checkbox" class="itemCheck" data-group="@i.IdCuaHang" name="@j.IdSanPham" />
									<span class="checkmark"></span>
								</label>
							</div>
							<div class="width-50 d-flex gap-3">
								<div class="IdSanPham" name="@j.IdSanPham" style="display:none">@j.IdSanPham</div>
								<div class="width-height-80px graphic-cover-2">
									<img src="/@j.UrlAnh" />
								</div>
								<div>
									@j.TenSanPham
								</div>
							</div>
							<div class="width-12 text-center">
								<div class="old-price">
									@string.Format("{0:#,##0} ₫", j.GiaGoc)
								</div>
								<div class="new-price" name="@j.IdSanPham">
									@string.Format("{0:#,##0} ₫", j.GiaBan)
								</div>
							</div>
							<div class="width-12 text-center">
								<div class="text-center d-inline-flex border-rounded border-style-3 overflow-hidden">
									<button class="counting-box decrease" name="@j.IdSanPham">-</button>
									<input type="text" class="counting-input quantity-input" name="@j.IdSanPham" value="@j.SoLuong">
									<button class="counting-box increase" name="@j.IdSanPham">+</button>
									<div class="SoLuongKho" name="@j.IdSanPham" style="display:none">@j.SoLuongKho</div>
								</div>
							</div>
							<div class="width-12 text-center total-price Product-Total-Price" name="@j.IdSanPham">
								@string.Format("{0:#,##0} ₫", j.GiaBan * j.SoLuong)
							</div>
							<div class="width-12">
								<div class="d-flex justify-content-center">
									<button class="invisible-button delete-product-shopcart-button remove-from-btn"
									name="@j.IdSanPham">
										Xoá
									</button>
								</div>
							</div>
						</div>
					}
				</div>
			}

			<div class="bg-white box-padding-15 border-rounded box-padding-left-30">
				<div class="d-flex box-padding-left-right-10 gap-3 align-items-center">
					<div class="width-2 d-flex justify-content-center align-items-center">
						<label class="custom-checkbox-container">
							<input type="checkbox" class="allCheck" />
							<span class="checkmark"></span>
						</label>
					</div>
					<div>
						Chọn tất cả
					</div>
					<div>
						<button class="invisible-button delete-product-shopcart-button remove-checked-product">Xoá các sản phẩm đã đánh dấu</button>
					</div>
					<div class="d-flex gap-3 ms-auto align-items-center">
						<div>
							Tổng cộng (<span id="FinalCount">0</span> sản phẩm): <span id="FinalPrice" class="text-highlight">0 ₫</span>
						</div>
						<div>
							<button class="invisible-button btn-buy" onclick="ConfirmPayment()">
								Mua hàng
							</button>
						</div>
					</div>
				</div>
			</div>
		}
		else
		{
			<div class="d-flex flex-column align-items-center">
				<img src="~/images/Resources/gio-hang-trong.png" class="gio-hang-trong-img" />
				<h4>Giỏ hàng của bạn đang trống</h4>
				<a class="btn btn-black mt-3" asp-controller="AllProducts" asp-action="Index">Mua sắm ngay</a>
			</div>
		}
	</div>
</div>
<form asp-controller="ShoppingCart" asp-action="ConfirmPayment" id="confirmForm" method="get">
</form>

@section Scripts {
	<script>
		const allCheckbox = document.getElementsByClassName('allCheck');
		const shopCheckbox = document.getElementsByClassName('shopCheck');
		const itemCheckbox = document.getElementsByClassName('itemCheck');
		const removeBtn = document.getElementsByClassName('remove-from-btn');
		const removeCheckedBtn = document.getElementsByClassName('remove-checked-product');
		function updateAllCheckbox() {
			let IsAllChecked = true;
			for(let i of itemCheckbox) {
				if(i.checked === false) IsAllChecked = false;
			}
			for(let i of allCheckbox) {
				i.checked = IsAllChecked;
			}
			updateFinalPrice();
			updateFinalCount();
		}
		function updateShopCheckbox(group) {
			let IsAllChecked = true;
			const shopCheckboxes = document.querySelectorAll(`[data-group="${group}"]`);
			let shop = document.querySelector(`[data-group="${group}"].shopCheck`);
			for(let i of shopCheckboxes) {
				if(i.className === 'itemCheck' && i.checked === false)
					IsAllChecked = false;
			}
			shop.checked = IsAllChecked;
			updateAllCheckbox();
		}

		for (let checkbox of allCheckbox) {
			checkbox.addEventListener('change', function() {
				const isChecked = this.checked;
				for(let i of allCheckbox) {
					i.checked = isChecked;
				}
				for(let i of shopCheckbox) {
					i.checked = isChecked;
				}
				for(let i of itemCheckbox) {
					i.checked = isChecked;
				}
				updateFinalPrice();
				updateFinalCount();
			});
		}
		for(let checkbox of shopCheckbox) {
			checkbox.addEventListener('change', function() {
				const isChecked = this.checked;
				const group = this.dataset.group;
				const shopCheckboxes = document.querySelectorAll(`[data-group="${group}"]`)
				for(let i of shopCheckboxes) {
					i.checked = isChecked;
				}
				updateAllCheckbox();
			});
		}
		for(let checkbox of itemCheckbox) {
			checkbox.addEventListener('change', function() {
				const group = this.dataset.group;
				updateShopCheckbox(group);
			});
		}

		for(let btn of removeBtn) {
			btn.addEventListener('click', function() {
				let btnName = this.name;
				$.ajax({
					url: '@Url.Action("RemoveFromCart", "ShoppingCart")',
					type: 'POST',
					data: { IdSanPham: btnName },
					dataType: "json",
					success: function(response) {
						let product = document.querySelector(`.product-display[name="${btnName}"]`)
						const group = product.dataset.group;
						product.remove();
						let shopProducts = document.querySelector(`.product-display[data-group="${group}"]`);
						if(shopProducts === null) {
							let shop = document.querySelector(`.shop-display[data-group="${group}"]`);
							shop.remove();
						}
					},
				})
				.then(function() {
					updateFinalPrice();
					updateFinalCount();
				});
			})
		}

		for(let btn of removeCheckedBtn) {
			btn.addEventListener('click', function() {
				let requests = [];
				for(let i of itemCheckbox) {
					if(i.checked === true) {
						let btnName = i.name;
						let request = $.ajax({
							url: '@Url.Action("RemoveFromCart", "ShoppingCart")',
							type: 'POST',
							data: { IdSanPham: btnName },
							dataType: "json",
							success: function(response) {
								let product = document.querySelector(`.product-display[name="${btnName}"]`)
								const group = product.dataset.group;
								product.remove();
								let shopProducts = document.querySelector(`.product-display[data-group="${group}"]`);
								if(shopProducts === null) {
									let shop = document.querySelector(`.shop-display[data-group="${group}"]`);
									shop.remove();
								}
							},
						})
						requests.push(request);
					}
				}
				Promise.all(requests).then(() => {
					updateFinalPrice();
					updateFinalCount();
				});
			})
		}

		const decreaseBtn = document.querySelectorAll('.decrease');
		const increaseBtn = document.querySelectorAll('.increase');
		const quantityInput = document.querySelectorAll('.quantity-input');

		function updateQuantityDb(IdSanPham, SoLuong) {
			$.ajax({
				url: '@Url.Action("UpdateQuantity", "ShoppingCart")',
				type: 'POST',
				data: { IdSanPham: IdSanPham, SoLuong: SoLuong },
				dataType: "json",
			})
		}

		function updateTotalPrice(name) {
			let total = document.querySelector(`[name="${name}"].Product-Total-Price`);
			let soLuong = parseInt(document.querySelector(`[name="${name}"].quantity-input`).value.replace(/[^0-9]/g, '')) || 0;
			let donGia = parseInt(document.querySelector(`[name="${name}"].new-price`).textContent.replace(/[^0-9]/g, '')) || 0;
			total.textContent = formatCurrency(soLuong * donGia);
		}

		function updateFinalPrice() {
			const checkedFinal = document.querySelectorAll(`.itemCheck`);
			let finalPrice = 0;
			for(let i of checkedFinal) {
				if(i.checked) {
					let name = i.name;
					let total = document.querySelector(`[name="${name}"].Product-Total-Price`);
					finalPrice += parseInt(total.textContent.replace(/[^0-9]/g, '')) || 0;
				}
			}
			let finalPriceObj = document.getElementById('FinalPrice');
			finalPriceObj.textContent = formatCurrency(finalPrice);
		}

		function updateFinalCount() {
			const checkedFinal = document.querySelectorAll(`.itemCheck`);
			let finalCount = 0;
			for(let i of checkedFinal) {
				if(i.checked) {
					let name = i.name;
					let total = document.querySelector(`[name="${name}"].quantity-input`);
					finalCount += parseInt(total.value.replace(/[^0-9]/g, '')) || 0;
				}
			}
			let finalCountObj = document.getElementById('FinalCount');
			finalCountObj.textContent = finalCount;
		}

		for (let btn of increaseBtn) {
			btn.addEventListener('click', function () {
				let name = this.name;
				let quantity = document.querySelector(`[name="${name}"].quantity-input`);
				let soLuong = parseInt(quantity.value) || 0;
				let soLuongKho = parseInt(document.querySelector(`[name="${name}"].SoLuongKho`).textContent) || 0;
				quantity.value = soLuong + 1;
				if (quantity.value < 1) {
					quantity.value = 1
				}
				if (quantity.value > soLuongKho) {
					quantity.value = soLuongKho
				}
				let id = document.querySelector(`[name="${name}"].IdSanPham`).textContent;
				updateQuantityDb(id, quantity.value);
				updateTotalPrice(name);
				updateFinalPrice();
				updateFinalCount();
			})
		}

		for (let btn of decreaseBtn) {
			btn.addEventListener('click', function () {
				let name = this.name;
				let quantity = document.querySelector(`[name="${name}"].quantity-input`);
				let soLuong = parseInt(quantity.value) || 0;
				let soLuongKho = parseInt(document.querySelector(`[name="${name}"].SoLuongKho`).textContent) || 0;
				quantity.value = soLuong - 1;
				if (quantity.value < 1) {
					quantity.value = 1
				}
				if (quantity.value > soLuongKho) {
					quantity.value = soLuongKho
				}
				let id = document.querySelector(`[name="${name}"].IdSanPham`).textContent;
				updateQuantityDb(id, quantity.value);
				updateTotalPrice(name);
				updateFinalPrice();
				updateFinalCount();
			})
		}

		for (let btn of quantityInput) {
			btn.addEventListener('input', function () {
				let name = this.name;
				let quantity = document.querySelector(`[name="${name}"].quantity-input`);
				quantity.value = quantity.value.replace(/[^0-9]/g, '');
				let soLuongKho = parseInt(document.querySelector(`[name="${name}"].SoLuongKho`).textContent) || 0;
				if (quantity.value < 1) {
					quantity.value = 1
				}
				if (quantity.value > soLuongKho) {
					quantity.value = soLuongKho
				}
				let id = document.querySelector(`[name="${name}"].IdSanPham`).textContent;
				updateQuantityDb(id, quantity.value);
				updateTotalPrice(name);
				updateFinalPrice();
				updateFinalCount();
			})
		}
		function ConfirmPayment() {
			let danhSachSanPham = [];
			const products = document.querySelectorAll(`.itemCheck`);
			let count = 0;
			for(let i of products) {
				if(i.checked) {
					count++;
					let name = i.name;
					let id = document.querySelector(`[name="${name}"].IdSanPham`).textContent;
					danhSachSanPham.push(id.toString());
				}
			}
			if(count === 0) {
				alert("Bạn chưa chọn sản phẩm nào!");
			}
			else {
				let form = document.getElementById("confirmForm");
				for(let i of danhSachSanPham) {
					let input = document.createElement("input");
					input.type = "hidden";
					input.name = "danhSachSanPham";
					input.value = i;
					form.appendChild(input);
				}
				form.submit();
			}
		}
	</script>
}