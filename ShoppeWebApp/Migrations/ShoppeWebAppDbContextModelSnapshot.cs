// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShoppeWebApp.Data;

#nullable disable

namespace ShoppeWebApp.Migrations
{
    [DbContext(typeof(ShoppeWebAppDbContext))]
    partial class ShoppeWebAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ShoppeWebApp.Models.Chitietdonhang", b =>
                {
                    b.Property<string>("IdDonHang")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IdSanPham")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("DonGia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdDonHang", "IdSanPham")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "IdSanPham" }, "IdSanPham");

                    b.ToTable("chitietdonhang");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Cuahang", b =>
                {
                    b.Property<string>("IdCuaHang")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenCuaHang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianXoa")
                        .HasColumnType("datetime");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UrlAnh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdCuaHang")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdNguoiDung" }, "IdNguoiDung");

                    b.ToTable("cuahang");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Danhgia", b =>
                {
                    b.Property<string>("IdDanhGia")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("DiemDanhGia")
                        .HasColumnType("int");

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IdSanPham")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("NoiDung")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("ThoiGianDg")
                        .HasColumnType("datetime")
                        .HasColumnName("ThoiGianDG");

                    b.HasKey("IdDanhGia")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdNguoiDung" }, "IdNguoiDung")
                        .HasDatabaseName("IdNguoiDung1");

                    b.HasIndex(new[] { "IdSanPham" }, "IdSanPham")
                        .HasDatabaseName("IdSanPham1");

                    b.ToTable("danhgia");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Danhmuc", b =>
                {
                    b.Property<string>("IdDanhMuc")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("TenDanhMuc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdDanhMuc")
                        .HasName("PRIMARY");

                    b.ToTable("danhmuc");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Donhang", b =>
                {
                    b.Property<string>("IdDonHang")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IdLienHe")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("ThoiGianGiao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime");

                    b.Property<decimal>("TongTien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.HasKey("IdDonHang")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdLienHe" }, "IdLienHe");

                    b.ToTable("donhang");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Giohang", b =>
                {
                    b.Property<string>("IdNguoiDung")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IdSanPham")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("IdNguoiDung", "IdSanPham")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "IdSanPham" }, "IdSanPham")
                        .HasDatabaseName("IdSanPham2");

                    b.ToTable("giohang");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Nguoidung", b =>
                {
                    b.Property<string>("IdNguoiDung")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Cccd")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("CCCD");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SDT");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianXoa")
                        .HasColumnType("datetime");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<int>("VaiTro")
                        .HasColumnType("int");

                    b.HasKey("IdNguoiDung")
                        .HasName("PRIMARY");

                    b.ToTable("nguoidung");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Sanpham", b =>
                {
                    b.Property<string>("IdSanPham")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<decimal>("GiaBan")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GiaGoc")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdCuaHang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("IdDanhMuc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("MoTa")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("SoLuongBan")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongDanhGia")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongKho")
                        .HasColumnType("int");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("ThoiGianTao")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ThoiGianXoa")
                        .HasColumnType("datetime");

                    b.Property<int>("TongDiemDanhGia")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("UrlAnh")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdSanPham")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCuaHang" }, "IdCuaHang");

                    b.HasIndex(new[] { "IdDanhMuc" }, "IdDanhMuc");

                    b.ToTable("sanpham");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Taikhoan", b =>
                {
                    b.Property<string>("IdNguoiDung")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("IdNguoiDung")
                        .HasName("PRIMARY");

                    b.ToTable("taikhoan");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Thongtinlienhe", b =>
                {
                    b.Property<string>("IdLienHe")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("HoVaTen")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("IdNguoiDung")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SDT");

                    b.HasKey("IdLienHe")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdNguoiDung" }, "IdNguoiDung")
                        .HasDatabaseName("IdNguoiDung2");

                    b.ToTable("thongtinlienhe");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Chitietdonhang", b =>
                {
                    b.HasOne("ShoppeWebApp.Models.Donhang", "IdDonHangNavigation")
                        .WithMany("Chitietdonhangs")
                        .HasForeignKey("IdDonHang")
                        .IsRequired()
                        .HasConstraintName("chitietdonhang_ibfk_1");

                    b.HasOne("ShoppeWebApp.Models.Sanpham", "IdSanPhamNavigation")
                        .WithMany("Chitietdonhangs")
                        .HasForeignKey("IdSanPham")
                        .IsRequired()
                        .HasConstraintName("chitietdonhang_ibfk_2");

                    b.Navigation("IdDonHangNavigation");

                    b.Navigation("IdSanPhamNavigation");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Cuahang", b =>
                {
                    b.HasOne("ShoppeWebApp.Models.Nguoidung", "IdNguoiDungNavigation")
                        .WithMany("Cuahangs")
                        .HasForeignKey("IdNguoiDung")
                        .IsRequired()
                        .HasConstraintName("cuahang_ibfk_1");

                    b.Navigation("IdNguoiDungNavigation");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Danhgia", b =>
                {
                    b.HasOne("ShoppeWebApp.Models.Nguoidung", "IdNguoiDungNavigation")
                        .WithMany("Danhgia")
                        .HasForeignKey("IdNguoiDung")
                        .IsRequired()
                        .HasConstraintName("danhgia_ibfk_1");

                    b.HasOne("ShoppeWebApp.Models.Sanpham", "IdSanPhamNavigation")
                        .WithMany("Danhgia")
                        .HasForeignKey("IdSanPham")
                        .IsRequired()
                        .HasConstraintName("danhgia_ibfk_2");

                    b.Navigation("IdNguoiDungNavigation");

                    b.Navigation("IdSanPhamNavigation");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Donhang", b =>
                {
                    b.HasOne("ShoppeWebApp.Models.Thongtinlienhe", "IdLienHeNavigation")
                        .WithMany("Donhangs")
                        .HasForeignKey("IdLienHe")
                        .IsRequired()
                        .HasConstraintName("donhang_ibfk_1");

                    b.Navigation("IdLienHeNavigation");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Giohang", b =>
                {
                    b.HasOne("ShoppeWebApp.Models.Nguoidung", "IdNguoiDungNavigation")
                        .WithMany("Giohangs")
                        .HasForeignKey("IdNguoiDung")
                        .IsRequired()
                        .HasConstraintName("giohang_ibfk_1");

                    b.HasOne("ShoppeWebApp.Models.Sanpham", "IdSanPhamNavigation")
                        .WithMany("Giohangs")
                        .HasForeignKey("IdSanPham")
                        .IsRequired()
                        .HasConstraintName("giohang_ibfk_2");

                    b.Navigation("IdNguoiDungNavigation");

                    b.Navigation("IdSanPhamNavigation");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Sanpham", b =>
                {
                    b.HasOne("ShoppeWebApp.Models.Cuahang", "IdCuaHangNavigation")
                        .WithMany("Sanphams")
                        .HasForeignKey("IdCuaHang")
                        .IsRequired()
                        .HasConstraintName("sanpham_ibfk_2");

                    b.HasOne("ShoppeWebApp.Models.Danhmuc", "IdDanhMucNavigation")
                        .WithMany("Sanphams")
                        .HasForeignKey("IdDanhMuc")
                        .IsRequired()
                        .HasConstraintName("sanpham_ibfk_1");

                    b.Navigation("IdCuaHangNavigation");

                    b.Navigation("IdDanhMucNavigation");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Taikhoan", b =>
                {
                    b.HasOne("ShoppeWebApp.Models.Nguoidung", "IdNguoiDungNavigation")
                        .WithOne("Taikhoan")
                        .HasForeignKey("ShoppeWebApp.Models.Taikhoan", "IdNguoiDung")
                        .IsRequired()
                        .HasConstraintName("taikhoan_ibfk_1");

                    b.Navigation("IdNguoiDungNavigation");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Thongtinlienhe", b =>
                {
                    b.HasOne("ShoppeWebApp.Models.Nguoidung", "IdNguoiDungNavigation")
                        .WithMany("Thongtinlienhes")
                        .HasForeignKey("IdNguoiDung")
                        .IsRequired()
                        .HasConstraintName("thongtinlienhe_ibfk_1");

                    b.Navigation("IdNguoiDungNavigation");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Cuahang", b =>
                {
                    b.Navigation("Sanphams");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Danhmuc", b =>
                {
                    b.Navigation("Sanphams");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Donhang", b =>
                {
                    b.Navigation("Chitietdonhangs");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Nguoidung", b =>
                {
                    b.Navigation("Cuahangs");

                    b.Navigation("Danhgia");

                    b.Navigation("Giohangs");

                    b.Navigation("Taikhoan");

                    b.Navigation("Thongtinlienhes");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Sanpham", b =>
                {
                    b.Navigation("Chitietdonhangs");

                    b.Navigation("Danhgia");

                    b.Navigation("Giohangs");
                });

            modelBuilder.Entity("ShoppeWebApp.Models.Thongtinlienhe", b =>
                {
                    b.Navigation("Donhangs");
                });
#pragma warning restore 612, 618
        }
    }
}
